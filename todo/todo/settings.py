"""
Django settings for todo project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv
import os
from storages.backends.s3boto3 import S3Boto3Storage
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-p0#xk%upb+693seaj-1k!2yvzw9nr#iv_y4yej-=n1+5d0=9iy'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'todoApp',
    "crispy_forms",
    "crispy_bootstrap5",
    "storages",
]

AWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = os.getenv('AWS_STORAGE_BUCKET_NAME')
AWS_S3_REGION_NAME = os.getenv('AWS_S3_REGION_NAME')
STATICFILES_LOCATION = os.getenv('STATICFILES_LOCATION')
MEDIAFILES_LOCATION = os.getenv('MEDIA')

AWS_S3_URL_PROTOCOL = 'https'
AWS_S3_USE_SSL = True
AWS_S3_VERIFY = True
AWS_S3_FILE_OVERWRITE = False

STATICFILES_STORAGE = 'todoApp.s3_storage.StaticStorage'
DEFAULT_FILE_STORAGE = 'todoApp.s3_storage.MediaStorage'

'''STORAGES = {
    # media file management(images)
    "default":{
        "BACKEND" : "storages.backends.s3boto3.S3Boto3Storage"
    },
    # CSS AND JS file management
    "staticfiles":{
        "BACKEND" : "storages.backends.s3boto3.S3Boto3Storage"
    },
}'''

MEDIA_URL = f'https://{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com/{MEDIAFILES_LOCATION}/'

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'todo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'todo.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Reference for production db
'''DATABASES = {
     #'default': {
         #'ENGINE': 'django.db.backends.sqlite3',
         #'NAME': BASE_DIR / 'db.sqlite3',
     #},
    'default': {

        #'ENGINE': 'django.db.backends.postgresql_psycopg2',
        #'HOST' : os.environ.get("POSTGRES_URL", "127.0.0.1"),
        #'PORT' : os.environ.get("POSTGRES_PORT", "5432"),
        #'NAME': os.environ.get("POSTGRES_DB","name"),
        #'USER' : os.environ.get("POSTGRES_USER","user"),
        #'PASSWORD' : os.environ.get("POSTGRES_PASSWORD","password"),
      
         'ENGINE': 'django.db.backends.postgresql_psycopg2',
         'HOST' : os.environ.get("POSTGRES_URL", "host"),
         'PORT' : os.environ.get("POSTGRES_PORT", "port"),
         'NAME': os.environ.get("POSTGRES_DB","name"),
         'USER' : os.environ.get("POSTGRES_USER","user"),
         'PASSWORD' : os.environ.get("POSTGRES_PASSWORD","password"),
    },
    'redshift': {
        'ENGINE': 'django_redshift_backend',
        'HOST' : os.environ.get("POSTGRES_URL", "host"),
        'PORT' : os.environ.get("POSTGRES_PORT", "port"),
        'NAME': os.environ.get("POSTGRES_DB","name"),
        'USER' : os.environ.get("POSTGRES_USER","user"),
        'PASSWORD' : os.environ.get("POSTGRES_PASSWORD","password"),        
    }
}'''


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/


# https://simpleisbetterthancomplex.com/tutorial/2016/08/01/how-to-upload-files-with-django.html
MEDIA_URL = 'media/'
MEDIA_ROOT = BASE_DIR / "media"

STATIC_URL = 'static/'
# this is a local directory since s3 is set, we no longer need it.
#STATICFILES_DIRS = [BASE_DIR / "static",] 


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# SMTP Settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')